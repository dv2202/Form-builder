{"ast":null,"code":"var _jsxFileName = \"/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/components/FormEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './QuestionsEditor';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormEditor = () => {\n  _s();\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    headerImage: '',\n    questions: []\n  });\n  const addQuestion = type => {\n    setForm(prevForm => ({\n      ...prevForm,\n      questions: [...prevForm.questions, {\n        type,\n        question: '',\n        image: '',\n        options: []\n      }]\n    }));\n  };\n  const saveForm = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/forms', form);\n      toast.success('Form saved successfully!');\n      // Reset form state\n      setForm({\n        title: '',\n        description: '',\n        headerImage: '',\n        questions: []\n      });\n    } catch (error) {\n      console.error('Error saving form:', error);\n      toast.error('Failed to save the form');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Form Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Form Title\",\n      className: \"w-full p-2 mb-4 border rounded\",\n      value: form.title,\n      onChange: e => setForm({\n        ...form,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Form Description\",\n      className: \"w-full p-2 mb-4 border rounded\",\n      value: form.description,\n      onChange: e => setForm({\n        ...form,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Header Image URL\",\n      className: \"w-full p-2 mb-4 border rounded\",\n      value: form.headerImage,\n      onChange: e => setForm({\n        ...form,\n        headerImage: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('Categorize'),\n        className: \"bg-blue-500 text-white p-2 rounded mr-2\",\n        children: \"Add Categorize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('Cloze'),\n        className: \"bg-green-500 text-white p-2 rounded mr-2\",\n        children: \"Add Cloze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('Comprehension'),\n        className: \"bg-yellow-500 text-white p-2 rounded\",\n        children: \"Add Comprehension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), form.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      onChange: updatedQuestion => {\n        const newQuestions = [...form.questions];\n        newQuestions[index] = updatedQuestion;\n        setForm({\n          ...form,\n          questions: newQuestions\n        });\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveForm,\n      className: \"bg-purple-500 text-white p-2 rounded\",\n      children: \"Save Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FormEditor, \"XVKpmbrBjkKKCv9j9VsSDnnnuhg=\");\n_c = FormEditor;\nexport default FormEditor;\nvar _c;\n$RefreshReg$(_c, \"FormEditor\");","map":{"version":3,"names":["React","useState","Question","axios","toast","ToastContainer","jsxDEV","_jsxDEV","FormEditor","_s","form","setForm","title","description","headerImage","questions","addQuestion","type","prevForm","question","image","options","saveForm","response","post","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","index","updatedQuestion","newQuestions","_c","$RefreshReg$"],"sources":["/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/components/FormEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Question from './QuestionsEditor';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FormEditor = () => {\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    headerImage: '',\n    questions: [],\n  });\n\n  const addQuestion = (type) => {\n    setForm((prevForm) => ({\n      ...prevForm,\n      questions: [...prevForm.questions, { type, question: '', image: '', options: [] }],\n    }));\n  };\n\n  const saveForm = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/forms', form);\n      toast.success('Form saved successfully!');\n      // Reset form state\n      setForm({\n        title: '',\n        description: '',\n        headerImage: '',\n        questions: [],\n      });\n    } catch (error) {\n      console.error('Error saving form:', error);\n      toast.error('Failed to save the form');\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <ToastContainer />\n      <h1 className=\"text-2xl font-bold mb-4\">Form Editor</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Form Title\"\n        className=\"w-full p-2 mb-4 border rounded\"\n        value={form.title}\n        onChange={(e) => setForm({ ...form, title: e.target.value })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Form Description\"\n        className=\"w-full p-2 mb-4 border rounded\"\n        value={form.description}\n        onChange={(e) => setForm({ ...form, description: e.target.value })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Header Image URL\"\n        className=\"w-full p-2 mb-4 border rounded\"\n        value={form.headerImage}\n        onChange={(e) => setForm({ ...form, headerImage: e.target.value })}\n      />\n      <div className=\"mb-4\">\n        <button onClick={() => addQuestion('Categorize')} className=\"bg-blue-500 text-white p-2 rounded mr-2\">\n          Add Categorize\n        </button>\n        <button onClick={() => addQuestion('Cloze')} className=\"bg-green-500 text-white p-2 rounded mr-2\">\n          Add Cloze\n        </button>\n        <button onClick={() => addQuestion('Comprehension')} className=\"bg-yellow-500 text-white p-2 rounded\">\n          Add Comprehension\n        </button>\n      </div>\n      {form.questions.map((question, index) => (\n        <Question\n          key={index}\n          question={question}\n          onChange={(updatedQuestion) => {\n            const newQuestions = [...form.questions];\n            newQuestions[index] = updatedQuestion;\n            setForm({ ...form, questions: newQuestions });\n          }}\n        />\n      ))}\n      <button onClick={saveForm} className=\"bg-purple-500 text-white p-2 rounded\">\n        Save Form\n      </button>\n    </div>\n  );\n};\n\nexport default FormEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}