{"ast":null,"code":"var _jsxFileName = \"/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/components/FormEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CategorizeQuestion from './CategorizeQuestion';\nimport ClozeQuestion from './ClozeQuestion';\nimport ComprehensionQuestion from './ComprehensionQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormEditor({\n  onSave\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [headerImage, setHeaderImage] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const addQuestion = type => {\n    setQuestions([...questions, {\n      type,\n      data: {}\n    }]);\n  };\n  const updateQuestion = (index, data) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index].data = data;\n    setQuestions(updatedQuestions);\n  };\n  const handleSave = () => {\n    const form = {\n      title,\n      headerImage,\n      questions\n    };\n    onSave(form);\n    // Here you would typically send the form data to your backend\n    console.log('Form saved:', form);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Form Title\",\n      className: \"w-full p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: headerImage,\n      onChange: e => setHeaderImage(e.target.value),\n      placeholder: \"Header Image URL\",\n      className: \"w-full p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), questions.map((question, index) => {\n      switch (question.type) {\n        case 'categorize':\n          return /*#__PURE__*/_jsxDEV(CategorizeQuestion, {\n            data: question.data,\n            onChange: data => updateQuestion(index, data)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        case 'cloze':\n          return /*#__PURE__*/_jsxDEV(ClozeQuestion, {\n            data: question.data,\n            onChange: data => updateQuestion(index, data)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        case 'comprehension':\n          return /*#__PURE__*/_jsxDEV(ComprehensionQuestion, {\n            data: question.data,\n            onChange: data => updateQuestion(index, data)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        default:\n          return null;\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('categorize'),\n        className: \"bg-green-500 text-white px-4 py-2 rounded\",\n        children: \"Add Categorize Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('cloze'),\n        className: \"bg-yellow-500 text-white px-4 py-2 rounded\",\n        children: \"Add Cloze Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addQuestion('comprehension'),\n        className: \"bg-purple-500 text-white px-4 py-2 rounded\",\n        children: \"Add Comprehension Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      children: \"Save Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FormEditor, \"3J+ixz9+A+aJhcmuwotEU3+wrYo=\");\n_c = FormEditor;\nexport default FormEditor;\nvar _c;\n$RefreshReg$(_c, \"FormEditor\");","map":{"version":3,"names":["React","useState","CategorizeQuestion","ClozeQuestion","ComprehensionQuestion","jsxDEV","_jsxDEV","FormEditor","onSave","_s","title","setTitle","headerImage","setHeaderImage","questions","setQuestions","addQuestion","type","data","updateQuestion","index","updatedQuestions","handleSave","form","console","log","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","question","onClick","_c","$RefreshReg$"],"sources":["/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/components/FormEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CategorizeQuestion from './CategorizeQuestion';\nimport ClozeQuestion from './ClozeQuestion';\nimport ComprehensionQuestion from './ComprehensionQuestion';\n\nfunction FormEditor({ onSave }) {\n  const [title, setTitle] = useState('');\n  const [headerImage, setHeaderImage] = useState('');\n  const [questions, setQuestions] = useState([]);\n\n  const addQuestion = (type) => {\n    setQuestions([...questions, { type, data: {} }]);\n  };\n\n  const updateQuestion = (index, data) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index].data = data;\n    setQuestions(updatedQuestions);\n  };\n\n  const handleSave = () => {\n    const form = {\n      title,\n      headerImage,\n      questions,\n    };\n    onSave(form);\n    // Here you would typically send the form data to your backend\n    console.log('Form saved:', form);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Form Title\"\n        className=\"w-full p-2 border rounded\"\n      />\n      <input\n        type=\"text\"\n        value={headerImage}\n        onChange={(e) => setHeaderImage(e.target.value)}\n        placeholder=\"Header Image URL\"\n        className=\"w-full p-2 border rounded\"\n      />\n      {questions.map((question, index) => {\n        switch (question.type) {\n          case 'categorize':\n            return (\n              <CategorizeQuestion\n                key={index}\n                data={question.data}\n                onChange={(data) => updateQuestion(index, data)}\n              />\n            );\n          case 'cloze':\n            return (\n              <ClozeQuestion\n                key={index}\n                data={question.data}\n                onChange={(data) => updateQuestion(index, data)}\n              />\n            );\n          case 'comprehension':\n            return (\n              <ComprehensionQuestion\n                key={index}\n                data={question.data}\n                onChange={(data) => updateQuestion(index, data)}\n              />\n            );\n          default:\n            return null;\n        }\n      })}\n      <div className=\"space-x-2\">\n        <button\n          onClick={() => addQuestion('categorize')}\n          className=\"bg-green-500 text-white px-4 py-2 rounded\"\n        >\n          Add Categorize Question\n        </button>\n        <button\n          onClick={() => addQuestion('cloze')}\n          className=\"bg-yellow-500 text-white px-4 py-2 rounded\"\n        >\n          Add Cloze Question\n        </button>\n        <button\n          onClick={() => addQuestion('comprehension')}\n          className=\"bg-purple-500 text-white px-4 py-2 rounded\"\n        >\n          Add Comprehension Question\n        </button>\n      </div>\n      <button\n        onClick={handleSave}\n        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n      >\n        Save Form\n      </button>\n    </div>\n  );\n}\n\nexport default FormEditor;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}