{"ast":null,"code":"var _jsxFileName = \"/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FormEditor from \"./components/FormEditor\";\nimport FormPreview from \"./components/FormPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [forms, setForms] = useState([]); // Stores all available forms\n  const [currentForm, setCurrentForm] = useState(null); // Tracks the form being edited/previewed\n  const [isPreview, setIsPreview] = useState(false); // Toggle between editor and preview mode\n\n  // Fetch all forms on component mount\n  useEffect(() => {\n    fetchForms();\n  }, []);\n\n  // Fetch forms from the backend\n  const fetchForms = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/forms`);\n      const data = await response.json();\n      setForms(data);\n    } catch (error) {\n      console.error(\"Error fetching forms:\", error);\n    }\n  };\n\n  // Save a form to the backend\n  const handleFormSave = async form => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/forms`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n      const savedForm = await response.json();\n      setForms([...forms, savedForm]);\n      setCurrentForm(savedForm); // Set the newly created form as current\n    } catch (error) {\n      console.error(\"Error saving form:\", error);\n    }\n  };\n\n  // Toggle between editor and preview mode\n  const togglePreview = () => {\n    if (!currentForm) {\n      alert(\"Please select a form to preview.\");\n      return;\n    }\n    setIsPreview(!isPreview);\n  };\n\n  // Set a selected form as the current form\n  const handleFormSelect = form => {\n    setCurrentForm(form);\n    setIsPreview(true); // Automatically go to preview mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"Available Forms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-6\",\n        children: forms.length > 0 ? forms.map(form => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-500 underline\",\n            onClick: () => handleFormSelect(form),\n            children: form.title || \"Untitled Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, form._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No forms available. Create one to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePreview,\n      className: `bg-blue-500 text-white px-4 py-2 rounded ${!currentForm && \"opacity-50 cursor-not-allowed\"}`,\n      disabled: !currentForm,\n      children: isPreview ? \"Edit Form\" : \"Preview Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: isPreview ? currentForm ? /*#__PURE__*/_jsxDEV(FormPreview, {\n        form: currentForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No form selected for preview.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(FormEditor, {\n        onSave: handleFormSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w5mw3EOo1EnVAcTbC7kqzdQgSXY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FormEditor","FormPreview","jsxDEV","_jsxDEV","App","_s","forms","setForms","currentForm","setCurrentForm","isPreview","setIsPreview","fetchForms","response","fetch","process","env","REACT_APP_BACKEND_URL","data","json","error","console","handleFormSave","form","method","headers","body","JSON","stringify","savedForm","togglePreview","alert","handleFormSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","title","_id","disabled","onSave","_c","$RefreshReg$"],"sources":["/Users/devanshvishwakarma/Desktop/Task-Builder/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormEditor from \"./components/FormEditor\";\nimport FormPreview from \"./components/FormPreview\";\n\nfunction App() {\n  const [forms, setForms] = useState([]); // Stores all available forms\n  const [currentForm, setCurrentForm] = useState(null); // Tracks the form being edited/previewed\n  const [isPreview, setIsPreview] = useState(false); // Toggle between editor and preview mode\n\n  // Fetch all forms on component mount\n  useEffect(() => {\n    fetchForms();\n  }, []);\n\n  // Fetch forms from the backend\n  const fetchForms = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/forms`);\n      const data = await response.json();\n      setForms(data);\n    } catch (error) {\n      console.error(\"Error fetching forms:\", error);\n    }\n  };\n\n  // Save a form to the backend\n  const handleFormSave = async (form) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/forms`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(form),\n      });\n      const savedForm = await response.json();\n      setForms([...forms, savedForm]);\n      setCurrentForm(savedForm); // Set the newly created form as current\n    } catch (error) {\n      console.error(\"Error saving form:\", error);\n    }\n  };\n\n  // Toggle between editor and preview mode\n  const togglePreview = () => {\n    if (!currentForm) {\n      alert(\"Please select a form to preview.\");\n      return;\n    }\n    setIsPreview(!isPreview);\n  };\n\n  // Set a selected form as the current form\n  const handleFormSelect = (form) => {\n    setCurrentForm(form);\n    setIsPreview(true); // Automatically go to preview mode\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-4\">Form Builder</h1>\n\n      {/* Form List */}\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold\">Available Forms:</h2>\n        <ul className=\"list-disc pl-6\">\n          {forms.length > 0 ? (\n            forms.map((form) => (\n              <li key={form._id} className=\"mb-2\">\n                <button\n                  className=\"text-blue-500 underline\"\n                  onClick={() => handleFormSelect(form)}\n                >\n                  {form.title || \"Untitled Form\"}\n                </button>\n              </li>\n            ))\n          ) : (\n            <p>No forms available. Create one to get started!</p>\n          )}\n        </ul>\n      </div>\n\n      {/* Toggle Button */}\n      <button\n        onClick={togglePreview}\n        className={`bg-blue-500 text-white px-4 py-2 rounded ${\n          !currentForm && \"opacity-50 cursor-not-allowed\"\n        }`}\n        disabled={!currentForm}\n      >\n        {isPreview ? \"Edit Form\" : \"Preview Form\"}\n      </button>\n\n      {/* Main Content */}\n      <div className=\"mt-6\">\n        {isPreview ? (\n          currentForm ? (\n            <FormPreview form={currentForm} />\n          ) : (\n            <p>No form selected for preview.</p>\n          )\n        ) : (\n          <FormEditor onSave={handleFormSave} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,YAAY,CAAC;MAC9E,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCZ,QAAQ,CAACW,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAG,MAAOC,IAAI,IAAK;IACrC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,YAAY,EAAE;QAC7EO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CAAC;MACF,MAAMM,SAAS,GAAG,MAAMhB,QAAQ,CAACM,IAAI,CAAC,CAAC;MACvCZ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEuB,SAAS,CAAC,CAAC;MAC/BpB,cAAc,CAACoB,SAAS,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACtB,WAAW,EAAE;MAChBuB,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IACApB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMsB,gBAAgB,GAAIT,IAAI,IAAK;IACjCd,cAAc,CAACc,IAAI,CAAC;IACpBZ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACER,OAAA;IAAK8B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC/B,OAAA;MAAI8B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGzDnC,OAAA;MAAK8B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/B,OAAA;QAAI8B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DnC,OAAA;QAAI8B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC3B5B,KAAK,CAACiC,MAAM,GAAG,CAAC,GACfjC,KAAK,CAACkC,GAAG,CAAEjB,IAAI,iBACbpB,OAAA;UAAmB8B,SAAS,EAAC,MAAM;UAAAC,QAAA,eACjC/B,OAAA;YACE8B,SAAS,EAAC,yBAAyB;YACnCQ,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACT,IAAI,CAAE;YAAAW,QAAA,EAErCX,IAAI,CAACmB,KAAK,IAAI;UAAe;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QAAC,GANFf,IAAI,CAACoB,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACL,CAAC,gBAEFnC,OAAA;UAAA+B,QAAA,EAAG;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACrD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGNnC,OAAA;MACEsC,OAAO,EAAEX,aAAc;MACvBG,SAAS,EAAE,4CACT,CAACzB,WAAW,IAAI,+BAA+B,EAC9C;MACHoC,QAAQ,EAAE,CAACpC,WAAY;MAAA0B,QAAA,EAEtBxB,SAAS,GAAG,WAAW,GAAG;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGTnC,OAAA;MAAK8B,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBxB,SAAS,GACRF,WAAW,gBACTL,OAAA,CAACF,WAAW;QAACsB,IAAI,EAAEf;MAAY;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAElCnC,OAAA;QAAA+B,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpC,gBAEDnC,OAAA,CAACH,UAAU;QAAC6C,MAAM,EAAEvB;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CAxGQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}